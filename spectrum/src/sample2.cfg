[service]
# 1 if Spectrum should run in server mode.
server_mode = 1

# The name of user/group Spectrum runs as.
#user=spectrum
#group=spectrum

# Hostname (JID) of this Spectrum 2 server mode instance.
jid = localhost

# To bind to all ipv4 interfaces, use server=0.0.0.0
server = 127.0.0.1

# XMPP server port.
port = 5222

# Interface on which Spectrum listens for backends.
backend_host = 127.0.0.1

# Port on which Spectrum listens for backends.
# By default Spectrum chooses random backend port and there's
# no need to change it normally
#backend_port=10001

# Full path to PKCS#12 cetficiate used for TLS in server mode.
#cert=

# Certificate password if any.
#cert_password=

# Number of users per one legacy network backend.
users_per_backend=10

# Full path to backend binary.
backend=/usr/bin/spectrum2_libpurple_backend
#backend=/usr/bin/spectrum2_libcommuni_backend

# Libpurple protocol-id for spectrum_libpurple_backend
protocol=prpl-jabber
#protocol=prpl-msn
#protocol=prpl-icq
# skypeweb plugin
#protocol=prpl-skypeweb
# facebook plugin
#protocol=prpl-facebook

# protocol=any means that user sets his protocol in his JID which has to be
# in following format: protocol.username@domain.tld
# So for example: prpl-jabber.hanzz.k%gmail.com@domain.tld
#protocol=any

[identity]
# Name of Spectrum instance in service discovery
name=Spectrum Jabber Transport

# Type of transport ("msn", "icq", "xmpp").
# Check http://xmpp.org/registrar/disco-categories.html#gateway
type=xmpp

# Category of transport, default is "gateway
#category=gateway

[logging]
# log4cxx/log4j logging configuration file in ini format used for main spectrum2 instance.
config = /etc/spectrum2/logging.cfg

# log4cxx/log4j logging configuration file in ini format used for backends.
backend_config = /etc/spectrum2/backend-logging.cfg

[database]
# Database backend type
# "sqlite3", "mysql", "pqxx", or "none" without database backend
type = none

# For SQLite3: Full path to database
# For MySQL and PostgreSQL: name of database
# default database = /var/lib/spectrum2/$jid/database.sql
#database = jabber_transport

# Server.
#server = localhost

# Port.
#port = 0

# User.
#user = spectrum

# Paasword.
#password = secret

# Prefix used for tables
#prefix = jabber_

# Connection string (for pqxx only!)
# If you set this, it ignores every other database option except for type and prefix.
#connectionstring = host=localhost user=specturm password=secret

[registration]
# Enable public registrations
enable_public_registration=1

# Text to display upon user registration form
#username_label=Jabber JID (e.g. user@server.tld):
#instructions=Enter your remote jabber JID and password as well as your local username and password

# If True a local jabber account on <local_account_server> is needed
# for transport registration, the idea is to enable public registration
# from other servers, but only for users, who have already local accounts
#require_local_account=1
#local_username_label=Local username (without @server.tld):
#local_account_server=localhost
#local_account_server_timeout=10000

